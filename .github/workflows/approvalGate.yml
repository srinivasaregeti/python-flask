name: Run this workflow based on the approval comment in the issue
on: issue_comment

jobs:
  comment:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{steps.approvalStatus.outputs.approval}}
    steps:
      - uses: rytswd/comvent@v0.1.0
        id: approvalid
        with:
          keyword: Approved # This is the regex string to match against
      - name: Run this even if comment did not match
        run: |
          echo Running this even without comment match
          exit 1
        if: steps.approvalid.outputs.comvent == ''
      - name: Run when comment contains matching string
        id: approvalStatus
        run: |
          echo Comment has the matching string
          echo "::set-output name=approval::TRUE"
        if: steps.approvalid.outputs.comvent != ''
  
  deploy:
    needs: [comment]
    runs-on: ubuntu-latest
    if: needs.comment.outputs.output1 == 'TRUE'

    steps:
    - uses: actions/checkout@v2

    - name: Output from the Approval comment job
      run: echo ${{needs.comment.outputs.output1}}

   # instructions on CF cli installation
    # https://docs.cloudfoundry.org/cf-cli/install-go-cli.html
    - name: Install CF cli
      run: |
        wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
        echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
        sudo apt-get update
        sudo apt-get install cf-cli
  
  # How to create a service account for automated deployments
  # https://cloud.gov/docs/services/cloud-gov-service-account/
  # https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets
    - name: Deploy the App to Cloud.gov
      run: |
        cf api  https://api.fr.cloud.gov
        cf auth ${{secrets.CF_SERVICE_ACCOUNT_ID}} ${{secrets.CF_SERVICE_ACCOUNT_PASSWORD}}
        cf target -o "epa-prototyping"
        cf push

  newman:
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Test API using Newman
      run: |
        newman run Collections/CF-Sample-App.postman_collection.json

  Codescan:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  Selenium:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Start Selenoid Server
      uses: Xotabu4/selenoid-github-action@v1
    - run: npm install selenium-webdriver
    - name: Run Tests
      run: node testcase-01.js
